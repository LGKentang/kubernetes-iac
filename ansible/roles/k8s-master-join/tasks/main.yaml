- name: Reset kubeadm to ensure clean state
  become: true
  shell: |
    kubeadm reset -f
    systemctl stop kubelet
    systemctl stop containerd
    ip link delete cni0 || true
    ip link delete flannel.1 || true
    ip link delete docker0 || true
    iptables -F
    systemctl start containerd
  args:
    executable: /bin/bash
  when: not (hostvars[inventory_hostname].is_bootstrap | default(false))

- name: Ensure /etc/kubernetes/manifests exists
  become: true
  file:
    path: /etc/kubernetes/manifests
    state: directory
    owner: root
    group: root
    mode: '0755'
  when: not (hostvars[inventory_hostname].is_bootstrap | default(false))


- name: Pull kube-vip container image
  become: true
  shell: |
    ctr -n k8s.io images pull ghcr.io/kube-vip/kube-vip:{{kube_vip_version}}
  args:
    executable: /bin/bash
  when: not (hostvars[inventory_hostname].is_bootstrap | default(false))

- name: Generate kube-vip manifest
  become: yes
  shell: |
    ctr -n k8s.io run --rm --net-host ghcr.io/kube-vip/kube-vip:{{kube_vip_version}} vip /kube-vip manifest pod \
      --interface {{network_interface}} \
      --address {{kube_vip_address}}\
      --controlplane --services --arp --leaderElection | sudo tee /etc/kubernetes/manifests/kube-vip.yaml > /dev/null
  args:
    executable: /bin/bash
  when: not (hostvars[inventory_hostname].is_bootstrap | default(false))

- name: Read kubeadm control-plane join command from local file
  delegate_to: localhost
  become: false
  slurp:
    src: "./join-controlplane.sh"
  register: controlplane_join_file
  when: not (hostvars[inventory_hostname].is_bootstrap | default(false))

- name: Decode control-plane join command
  set_fact:
    join_command: "{{ controlplane_join_file.content | b64decode | trim }}"
  when: not (hostvars[inventory_hostname].is_bootstrap | default(false))

- name: Join the Kubernetes cluster as a secondary master
  become: true
  command: "{{ join_command }}"
  args:
    creates: /etc/kubernetes/kubelet.conf
  when: not (hostvars[inventory_hostname].is_bootstrap | default(false))

- name: Set up kubeconfig for non-root user (control-plane only)
  become: true
  shell: |
    mkdir -p /home/{{ ansible_user }}/.kube
    cp -n /etc/kubernetes/admin.conf /home/{{ ansible_user }}/.kube/config
    chown {{ ansible_user }}:{{ ansible_user }} /home/{{ ansible_user }}/.kube/config
  args:
    executable: /bin/bash
  when: not (hostvars[inventory_hostname].is_bootstrap | default(false))


